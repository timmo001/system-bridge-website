---
import { Icon } from "astro-icon/components";

const navItems = [
  { title: "Features", url: "/#features" },
  { title: "Modules", url: "/#modules" },
  { title: "Links / Resources", url: "/#links" },
  { title: "Download & Install", url: "/docs/install" },
  { title: "Running", url: "/docs/running" },
  { title: "CLI", url: "/docs/cli" },
  { title: "API", url: "/docs/api/data" },
  { title: "WebSocket", url: "/docs/websocket/data-get" },
  { title: "FAQ", url: "/faq" },
];
---

<header
  id="page-header"
  class="z-10 flex items-center justify-between w-full px-8 py-4 fixed top-0 bottom-auto bg-violet-900 text-white"
>
  <a
    class="flex items-center gap-3 nav-text hover:!text-default drop-shadow-lg hover:drop-shadow-xl"
    href="/"
  >
    <h1 class="sr-only">System Bridge</h1>
    <Icon name="logomark" class="h-10" />
    <Icon name="wordmark" class="hidden h-4 sm:block" />
  </a>
  <div>
    <div class="flex items-center gap-6">
      <nav class="hidden sm:block">
        <div class="flex items-center gap-6">
          {
            navItems.map(({ title, url }) => (
              <a
                class={`text-sm text-indigo-50 drop-shadow-${
                  Astro.url.pathname === url ? "2xl" : "lg"
                } hover:drop-shadow-xl`}
                href={url}
                style={`color: ${
                  Astro.url.pathname === url
                    ? "var(--color-nav-active)"
                    : "inherit"
                }`}
              >
                {title}
              </a>
            ))
          }
        </div>
      </nav>
      <button
        id="open-nav-button"
        type="button"
        class="btn sm:hidden"
        aria-label="Navigation"
      >
        <Icon name="mdi:menu" class="h-8" />
      </button>
    </div>
    <div id="menu-modal" class="hidden modal" aria-hidden="true">
      <div class="fixed inset-0 px-8 py-4 bg-default">
        <div class="space-y-4" role="dialog" aria-modal="true">
          <header class="text-right">
            <button
              id="close-nav-button"
              type="button"
              class="btn"
              aria-label="Close navigation"
            >
              <Icon name="mdi:close" class="h-8" />
            </button>
          </header>
          <div class="flex justify-center">
            <Icon name="logomark" class="h-16" />
          </div>
          <nav>
            <div class="flex flex-col">
              {
                navItems.map(({ title, url }) => (
                  <a class="block py-4 text-xl text-center" href={url}>
                    {title}
                  </a>
                ))
              }
            </div>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";

  const menuModalId = "menu-modal";

  const page = document.documentElement;
  const header = document.querySelector("#page-header");
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  const closeMenu = () => MicroModal.close(menuModalId);
  const openMenu = () => MicroModal.show(menuModalId, { disableScroll: true });

  closeNavButton.addEventListener("click", closeMenu);
  openNavButton.addEventListener("click", openMenu);

  document.addEventListener("scroll", () => {
    header.classList.toggle("fixed-header", page.scrollTop > 40);
  });

  menu?.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "a") closeMenu();
  });
</script>

<!-- https://github.com/withastro/compiler/issues/395 -->
<!-- <noscript>
  <style>
    #open-nav-button {
      @apply hidden;
    }
  </style>
</noscript> -->

<style>
  .fixed-header {
    @apply shadow-xl;
  }

  .modal.is-open {
    @apply block;
  }
</style>
